process.argv = [process.argv[0], ...process.argv.slice(3)];

		import __esrun_url from 'url';

		import { createRequire as __esrun_createRequire } from "module";

		const __esrun_fileUrl = __esrun_url.pathToFileURL("\Users\Hp\.config\Desktop\TS Projects\Project07_Adventure_Game\node_modules\.bin\esrun-1715347655361.tmp.mjs");

		const require = __esrun_createRequire(__esrun_fileUrl);
// index.ts
import inquirer from "../../../../../../node_modules/inquirer/lib/inquirer.js";
var Player = class {
  name;
  fuel = 100;
  constructor(name) {
    this.name = name;
  }
  fuelDecrease() {
    let fuel = this.fuel - 25;
    this.fuel = fuel;
  }
  fuelIncrease() {
    this.fuel = 100;
  }
};
var Opponent = class {
  name;
  fuel = 100;
  constructor(name) {
    this.name = name;
  }
  fuelDecrease() {
    let fuel = this.fuel - 25;
    this.fuel = fuel;
  }
};
var player = await inquirer.prompt([
  {
    name: "name",
    type: "input",
    message: "Please ente your name: "
  }
]);
var opponent = await inquirer.prompt([
  {
    name: "Select",
    type: "list",
    message: "Select your opponent",
    choices: ["Skeleton", "Alien", "Zombie"]
  }
]);
var p1 = new Player(player.name);
var o1 = new Opponent(opponent.name);
do {
  if (opponent.Select == "Skeleton") {
    let ask = await inquirer.prompt([
      {
        name: "opt",
        type: "list",
        message: "What would you like to do?",
        choices: ["Attack", "Drink portion", "Run for your life..."]
      }
    ]);
    if (ask.opt == "Attack") {
      let num = Math.floor(Math.random() * 2);
      if (num > 0) {
        p1.fuelDecrease();
        console.log(`${p1.name} fuel is ${p1.fuel}`);
        console.log(`${o1.name} fuel is ${o1.fuel}`);
      }
      if (num <= 0) {
        p1.fuelDecrease();
        console.log(`${p1.name} fuel is ${p1.fuel}`);
        console.log(`${o1.name} fuel is ${o1.fuel}`);
      }
    }
    if (ask.opt == "Drink Portion") {
      p1.fuelIncrease();
      console.log("You drink health portion your fuel is " + p1.fuel);
    }
    if (ask.opt == "Run for your life...") {
      console.log("You loose, Better Luck Next Time");
    }
  }
} while (true);
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiaW5kZXgudHMiXSwKICAic291cmNlUm9vdCI6ICJDOlxcVXNlcnNcXEhwXFwuY29uZmlnXFxEZXNrdG9wXFxUUyBQcm9qZWN0c1xcUHJvamVjdDA3X0FkdmVudHVyZV9HYW1lIiwKICAic291cmNlc0NvbnRlbnQiOiBbImltcG9ydCBpbnF1aXJlciBmcm9tIFwiaW5xdWlyZXJcIjtcclxuXHJcbmNsYXNzIFBsYXllciB7XHJcbiAgbmFtZTogc3RyaW5nO1xyXG4gIGZ1ZWw6IG51bWJlciA9IDEwMDtcclxuICBjb25zdHJ1Y3RvcihuYW1lOiBzdHJpbmcpIHtcclxuICAgIHRoaXMubmFtZSA9IG5hbWU7XHJcbiAgfVxyXG4gIGZ1ZWxEZWNyZWFzZSgpIHtcclxuICAgIGxldCBmdWVsID0gdGhpcy5mdWVsIC0gMjU7XHJcbiAgICB0aGlzLmZ1ZWwgPSBmdWVsO1xyXG4gIH1cclxuICBmdWVsSW5jcmVhc2UoKSB7XHJcbiAgICB0aGlzLmZ1ZWwgPSAxMDA7XHJcbiAgfVxyXG59XHJcbmNsYXNzIE9wcG9uZW50IHtcclxuICBuYW1lOiBzdHJpbmc7XHJcbiAgZnVlbDogbnVtYmVyID0gMTAwO1xyXG4gIGNvbnN0cnVjdG9yKG5hbWU6IHN0cmluZykge1xyXG4gICAgdGhpcy5uYW1lID0gbmFtZTtcclxuICB9XHJcbiAgZnVlbERlY3JlYXNlKCkge1xyXG4gICAgbGV0IGZ1ZWwgPSB0aGlzLmZ1ZWwgLSAyNTtcclxuICAgIHRoaXMuZnVlbCA9IGZ1ZWw7XHJcbiAgfVxyXG59XHJcbmxldCBwbGF5ZXIgPSBhd2FpdCBpbnF1aXJlci5wcm9tcHQoW1xyXG4gIHtcclxuICAgIG5hbWU6IFwibmFtZVwiLFxyXG4gICAgdHlwZTogXCJpbnB1dFwiLFxyXG4gICAgbWVzc2FnZTogXCJQbGVhc2UgZW50ZSB5b3VyIG5hbWU6IFwiLFxyXG4gIH0sXHJcbl0pO1xyXG5cclxubGV0IG9wcG9uZW50ID0gYXdhaXQgaW5xdWlyZXIucHJvbXB0KFtcclxuICB7XHJcbiAgICBuYW1lOiBcIlNlbGVjdFwiLFxyXG4gICAgdHlwZTogXCJsaXN0XCIsXHJcbiAgICBtZXNzYWdlOiBcIlNlbGVjdCB5b3VyIG9wcG9uZW50XCIsXHJcbiAgICBjaG9pY2VzOiBbXCJTa2VsZXRvblwiLCBcIkFsaWVuXCIsIFwiWm9tYmllXCJdLFxyXG4gIH0sXHJcbl0pO1xyXG5cclxubGV0IHAxID0gbmV3IFBsYXllcihwbGF5ZXIubmFtZSk7XHJcbmxldCBvMSA9IG5ldyBPcHBvbmVudChvcHBvbmVudC5uYW1lKTtcclxuXHJcbmRvIHtcclxuICBpZiAob3Bwb25lbnQuU2VsZWN0ID09IFwiU2tlbGV0b25cIikge1xyXG4gICAgbGV0IGFzayA9IGF3YWl0IGlucXVpcmVyLnByb21wdChbXHJcbiAgICAgIHtcclxuICAgICAgICBuYW1lOiBcIm9wdFwiLFxyXG4gICAgICAgIHR5cGU6IFwibGlzdFwiLFxyXG4gICAgICAgIG1lc3NhZ2U6IFwiV2hhdCB3b3VsZCB5b3UgbGlrZSB0byBkbz9cIixcclxuICAgICAgICBjaG9pY2VzOiBbXCJBdHRhY2tcIiwgXCJEcmluayBwb3J0aW9uXCIsIFwiUnVuIGZvciB5b3VyIGxpZmUuLi5cIl0sXHJcbiAgICAgIH0sXHJcbiAgICBdKTtcclxuXHJcbiAgICBpZiAoYXNrLm9wdCA9PSBcIkF0dGFja1wiKSB7XHJcbiAgICAgIGxldCBudW0gPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyKTtcclxuICAgICAgaWYgKG51bSA+IDApIHtcclxuICAgICAgICBwMS5mdWVsRGVjcmVhc2UoKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhgJHtwMS5uYW1lfSBmdWVsIGlzICR7cDEuZnVlbH1gKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhgJHtvMS5uYW1lfSBmdWVsIGlzICR7bzEuZnVlbH1gKTtcclxuICAgICAgfVxyXG4gICAgICBpZiAobnVtIDw9IDApIHtcclxuICAgICAgICBwMS5mdWVsRGVjcmVhc2UoKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhgJHtwMS5uYW1lfSBmdWVsIGlzICR7cDEuZnVlbH1gKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhgJHtvMS5uYW1lfSBmdWVsIGlzICR7bzEuZnVlbH1gKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYgKGFzay5vcHQgPT0gXCJEcmluayBQb3J0aW9uXCIpIHtcclxuICAgICAgcDEuZnVlbEluY3JlYXNlKCk7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiWW91IGRyaW5rIGhlYWx0aCBwb3J0aW9uIHlvdXIgZnVlbCBpcyBcIiArIHAxLmZ1ZWwpO1xyXG4gICAgfVxyXG4gICAgaWYoYXNrLm9wdCA9PSBcIlJ1biBmb3IgeW91ciBsaWZlLi4uXCIgKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJZb3UgbG9vc2UsIEJldHRlciBMdWNrIE5leHQgVGltZVwiKTtcclxuICAgICAgICB9XHJcbiAgfVxyXG59IHdoaWxlICh0cnVlKTtcclxuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUFBLE9BQU8sY0FBYztBQUVyQixJQUFNLFNBQU4sTUFBYTtBQUFBLEVBQ1g7QUFBQSxFQUNBLE9BQWU7QUFBQSxFQUNmLFlBQVksTUFBYztBQUN4QixTQUFLLE9BQU87QUFBQSxFQUNkO0FBQUEsRUFDQSxlQUFlO0FBQ2IsUUFBSSxPQUFPLEtBQUssT0FBTztBQUN2QixTQUFLLE9BQU87QUFBQSxFQUNkO0FBQUEsRUFDQSxlQUFlO0FBQ2IsU0FBSyxPQUFPO0FBQUEsRUFDZDtBQUNGO0FBQ0EsSUFBTSxXQUFOLE1BQWU7QUFBQSxFQUNiO0FBQUEsRUFDQSxPQUFlO0FBQUEsRUFDZixZQUFZLE1BQWM7QUFDeEIsU0FBSyxPQUFPO0FBQUEsRUFDZDtBQUFBLEVBQ0EsZUFBZTtBQUNiLFFBQUksT0FBTyxLQUFLLE9BQU87QUFDdkIsU0FBSyxPQUFPO0FBQUEsRUFDZDtBQUNGO0FBQ0EsSUFBSSxTQUFTLE1BQU0sU0FBUyxPQUFPO0FBQUEsRUFDakM7QUFBQSxJQUNFLE1BQU07QUFBQSxJQUNOLE1BQU07QUFBQSxJQUNOLFNBQVM7QUFBQSxFQUNYO0FBQ0YsQ0FBQztBQUVELElBQUksV0FBVyxNQUFNLFNBQVMsT0FBTztBQUFBLEVBQ25DO0FBQUEsSUFDRSxNQUFNO0FBQUEsSUFDTixNQUFNO0FBQUEsSUFDTixTQUFTO0FBQUEsSUFDVCxTQUFTLENBQUMsWUFBWSxTQUFTLFFBQVE7QUFBQSxFQUN6QztBQUNGLENBQUM7QUFFRCxJQUFJLEtBQUssSUFBSSxPQUFPLE9BQU8sSUFBSTtBQUMvQixJQUFJLEtBQUssSUFBSSxTQUFTLFNBQVMsSUFBSTtBQUVuQyxHQUFHO0FBQ0QsTUFBSSxTQUFTLFVBQVUsWUFBWTtBQUNqQyxRQUFJLE1BQU0sTUFBTSxTQUFTLE9BQU87QUFBQSxNQUM5QjtBQUFBLFFBQ0UsTUFBTTtBQUFBLFFBQ04sTUFBTTtBQUFBLFFBQ04sU0FBUztBQUFBLFFBQ1QsU0FBUyxDQUFDLFVBQVUsaUJBQWlCLHNCQUFzQjtBQUFBLE1BQzdEO0FBQUEsSUFDRixDQUFDO0FBRUQsUUFBSSxJQUFJLE9BQU8sVUFBVTtBQUN2QixVQUFJLE1BQU0sS0FBSyxNQUFNLEtBQUssT0FBTyxJQUFJLENBQUM7QUFDdEMsVUFBSSxNQUFNLEdBQUc7QUFDWCxXQUFHLGFBQWE7QUFDaEIsZ0JBQVEsSUFBSSxHQUFHLEdBQUcsZ0JBQWdCLEdBQUcsTUFBTTtBQUMzQyxnQkFBUSxJQUFJLEdBQUcsR0FBRyxnQkFBZ0IsR0FBRyxNQUFNO0FBQUEsTUFDN0M7QUFDQSxVQUFJLE9BQU8sR0FBRztBQUNaLFdBQUcsYUFBYTtBQUNoQixnQkFBUSxJQUFJLEdBQUcsR0FBRyxnQkFBZ0IsR0FBRyxNQUFNO0FBQzNDLGdCQUFRLElBQUksR0FBRyxHQUFHLGdCQUFnQixHQUFHLE1BQU07QUFBQSxNQUM3QztBQUFBLElBQ0Y7QUFDQSxRQUFJLElBQUksT0FBTyxpQkFBaUI7QUFDOUIsU0FBRyxhQUFhO0FBQ2hCLGNBQVEsSUFBSSwyQ0FBMkMsR0FBRyxJQUFJO0FBQUEsSUFDaEU7QUFDQSxRQUFHLElBQUksT0FBTyx3QkFDVjtBQUNJLGNBQVEsSUFBSSxrQ0FBa0M7QUFBQSxJQUNsRDtBQUFBLEVBQ047QUFDRixTQUFTOyIsCiAgIm5hbWVzIjogW10KfQo=

	